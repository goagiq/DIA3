<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Improved Knowledge Graph - Russian-Ukraine War Articles</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #333;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
        }
        
        .header p {
            margin: 10px 0 0 0;
            font-size: 1.1em;
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .graph-section {
            margin-bottom: 40px;
        }
        
        .graph-title {
            font-size: 1.8em;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
            border-bottom: 3px solid #3498db;
            padding-bottom: 10px;
        }
        
        .graph-container {
            border: 2px solid #ecf0f1;
            border-radius: 10px;
            padding: 20px;
            background: #f8f9fa;
            margin-bottom: 20px;
            position: relative;
        }
        
        .controls {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.9);
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .control-btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 8px 12px;
            margin: 2px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 12px;
            transition: background 0.3s;
        }
        
        .control-btn:hover {
            background: #2980b9;
        }
        
        .control-btn:active {
            background: #1f5f8b;
        }
        
        .node {
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .node:hover {
            stroke-width: 3px;
        }
        
        .link {
            stroke: #95a5a6;
            stroke-width: 2px;
            transition: all 0.3s ease;
        }
        
        .link:hover {
            stroke: #e74c3c;
            stroke-width: 4px;
        }
        
        .node-label {
            font-size: 12px;
            font-weight: bold;
            text-anchor: middle;
            pointer-events: none;
        }
        
        .tooltip {
            position: absolute;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px;
            border-radius: 5px;
            font-size: 12px;
            pointer-events: none;
            opacity: 0;
            transition: opacity 0.3s;
            z-index: 1001;
        }
        
        .legend {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin: 20px 0;
            flex-wrap: wrap;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
        }
        
        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid #333;
        }
        
        .summary-section {
            background: #ecf0f1;
            padding: 25px;
            border-radius: 10px;
            margin-top: 30px;
        }
        
        .summary-title {
            font-size: 1.5em;
            color: #2c3e50;
            margin-bottom: 15px;
        }
        
        .summary-list {
            list-style: none;
            padding: 0;
        }
        
        .summary-list li {
            padding: 8px 0;
            border-bottom: 1px solid #bdc3c7;
            position: relative;
            padding-left: 20px;
        }
        
        .summary-list li:before {
            content: "â€¢";
            color: #3498db;
            font-weight: bold;
            position: absolute;
            left: 0;
        }
        
        .instructions {
            background: #e8f4fd;
            border-left: 4px solid #3498db;
            padding: 15px;
            margin: 20px 0;
            border-radius: 0 5px 5px 0;
        }
        
        .instructions h4 {
            margin: 0 0 10px 0;
            color: #2c3e50;
        }
        
        .instructions ul {
            margin: 0;
            padding-left: 20px;
        }
        
        .instructions li {
            margin: 5px 0;
            color: #34495e;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Improved Knowledge Graph</h1>
            <p>Russian-Ukraine War Articles Analysis - 2025-08-14 23:31:07</p>
        </div>
        
        <div class="content">
            <div class="graph-section">
                <h2 class="graph-title">Entity Relationship Network</h2>
                
                <div class="instructions">
                    <h4>Interactive Controls:</h4>
                    <ul>
                        <li><strong>Mouse Wheel:</strong> Zoom in/out</li>
                        <li><strong>Click & Drag:</strong> Pan around the graph</li>
                        <li><strong>Double-click:</strong> Reset zoom and position</li>
                        <li><strong>Drag Nodes:</strong> Move individual nodes</li>
                    </ul>
                </div>
                
                <div class="graph-container">
                    <div class="controls">
                        <button class="control-btn" onclick="resetZoom()">Reset View</button>
                        <button class="control-btn" onclick="zoomIn()">Zoom In</button>
                        <button class="control-btn" onclick="zoomOut()">Zoom Out</button>
                        <button class="control-btn" onclick="fitToScreen()">Fit to Screen</button>
                    </div>
                    <div id="graph"></div>
                </div>
                
                <div class="legend">
                    <div class="legend-item">
                        <div class="legend-color" style="background: #e74c3c;"></div>
                        <span>People</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background: #3498db;"></div>
                        <span>Organizations</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background: #f39c12;"></div>
                        <span>Locations</span>
                    </div>
                    <div class="legend-item">
                        <div class="legend-color" style="background: #27ae60;"></div>
                        <span>Events</span>
                    </div>
                </div>
            </div>
            
            <div class="summary-section">
                <h3 class="summary-title">Graph Statistics</h3>
                <ul class="summary-list">
                    <li><strong>Total Nodes:</strong> 61</li>
                    <li><strong>Total Edges:</strong> 10</li>
                    <li><strong>People:</strong> 0</li>
                    <li><strong>Organizations:</strong> 0</li>
                    <li><strong>Locations:</strong> 0</li>
                    <li><strong>Events:</strong> 0</li>
                    <li><strong>Generated:</strong> 2025-08-14 23:31:07</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="tooltip" id="tooltip"></div>

    <script>
        // Graph data
        const graphData = {
            nodes: [{"id": "\u656c\u8acb\u8f38\u5165", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8a8d\u8b49\u5716\u6848", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8acb\u8f38\u5165\u4e0b", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8ff0\u8a8d\u8b49\u5716", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u6848\u4e2d\u7684\u5b57", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4e26\u9ede\u64ca", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4ee5\u4fbf\u78ba\u8a8d", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u60a8\u662f\u771f\u4eba", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u800c\u4e26\u975e\u96fb", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8166\u8edf\u9ad4", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8f38\u5165\u4e0a\u8ff0", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4e2d\u7684\u5b57", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u82e5\u60a8\u7d93\u5e38", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u9047\u5230\u6b64\u4e00", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u9801\u9762", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u9019\u5c31\u4ee3\u8868", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8a8d\u70ba\u60a8\u76ee", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u524d\u7684\u4f7f\u7528", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u65b9\u5f0f\u4f3c\u4e4e", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u6709\u53ef\u7591\u4e4b", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u9019\u7a2e\u5224\u65b7", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u662f\u6839\u64da\u5404", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7a2e\u6307\u6a19\u800c", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5b9a\u7684", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7279\u5225\u662f\u5176", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5b83\u8207\u60a8\u8a2a", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u554f\u8a18\u9304\u985e", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4f3c\u7684\u4f7f\u7528", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8005\u904e\u53bb\u7684", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8a2a\u554f\u8a18\u9304", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u672c\u7ad9\u8d8a\u4fe1", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4efb\u60a8", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5b83\u5c31\u8d8a\u5c11", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8981\u6c42\u60a8\u8f38", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5165\u9a57\u8b49\u78bc", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u82e5\u5e0c\u671b\u8b93", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u672c\u7ad9\u66f4\u4fe1", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4efb\u60a8\u7684\u4f7f", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5efa\u8b70\u63a1\u53d6", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4ee5\u4e0b\u624b\u6bb5", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u82e5\u5f9e\u5b78\u8853", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u6027\u6a5f\u69cb\u8a2a", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8acb\u5efa\u8b70\u60a8", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7684\u5b78\u8853\u69cb", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8a02\u8cfc", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u5efa\u7acb\u5e33\u6236", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4e26\u53c3\u8207\u7dad", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u57fa\u5340\u7684\u7de8", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8f2f\u6d3b\u52d5", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u8acb\u7559\u610f", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u6240\u6709\u7de8\u8f2f", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u6d3b\u52d5\u5c07\u6703", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7d93\u904e\u4eba\u5de5", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u9a57\u8b49\u5f8c\u7cfb", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7d71\u624d\u6703\u4f5c", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u4fe1\u4efb\u5224\u65b7", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u656c\u8acb\u53c3\u8003", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u76f8\u95dc\u7684\u4f7f", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u7528\u8aaa\u660e\u548c", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u653f\u7b56\u518d\u9032", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}, {"id": "\u884c\u7de8\u8f2f", "group": 0, "size": 21, "type": "PERSON", "confidence": 0.7}],
            links: [{"source": "\u656c\u8acb\u8f38\u5165", "target": "\u8a8d\u8b49\u5716\u6848", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u8a8d\u8b49\u5716\u6848", "target": "\u8acb\u8f38\u5165\u4e0b", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u8acb\u8f38\u5165\u4e0b", "target": "\u8ff0\u8a8d\u8b49\u5716", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u8ff0\u8a8d\u8b49\u5716", "target": "\u6848\u4e2d\u7684\u5b57", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u6848\u4e2d\u7684\u5b57", "target": "\u4e26\u9ede\u64ca", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u4e26\u9ede\u64ca", "target": "\u4ee5\u4fbf\u78ba\u8a8d", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u4ee5\u4fbf\u78ba\u8a8d", "target": "\u60a8\u662f\u771f\u4eba", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u60a8\u662f\u771f\u4eba", "target": "\u800c\u4e26\u975e\u96fb", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u800c\u4e26\u975e\u96fb", "target": "\u8166\u8edf\u9ad4", "value": 3, "label": "RELATED_TO", "confidence": 0.6}, {"source": "\u8166\u8edf\u9ad4", "target": "\u8f38\u5165\u4e0a\u8ff0", "value": 3, "label": "RELATED_TO", "confidence": 0.6}]
        };

        const colors = ["#9b59b6", "#e74c3c", "#3498db", "#f39c12", "#27ae60"];
        let simulation, svg, links, nodes, zoom, g;

        function createGraph() {
            const width = 800;
            const height = 500;
            
            // Create zoom behavior
            zoom = d3.zoom()
                .scaleExtent([0.1, 10])
                .on("zoom", zoomed);
            
            svg = d3.select("#graph")
                .append("svg")
                .attr("width", width)
                .attr("height", height)
                .call(zoom)
                .on("dblclick", resetZoom);
            
            // Create main group for zooming
            g = svg.append("g");
            
            // Create links
            links = g.append("g")
                .selectAll("line")
                .data(graphData.links)
                .enter().append("line")
                .attr("class", "link")
                .style("stroke-width", d => Math.sqrt(d.value || 1) * 2);
            
            // Create nodes
            nodes = g.append("g")
                .selectAll("circle")
                .data(graphData.nodes)
                .enter().append("circle")
                .attr("class", "node")
                .attr("r", d => d.size || 8)
                .style("fill", d => colors[d.group || 0])
                .style("stroke", "#fff")
                .style("stroke-width", 2)
                .call(d3.drag()
                    .on("start", dragstarted)
                    .on("drag", dragged)
                    .on("end", dragended));
            
            // Add labels
            g.append("g")
                .selectAll("text")
                .data(graphData.nodes)
                .enter().append("text")
                .attr("class", "node-label")
                .text(d => d.id)
                .style("fill", "#2c3e50");
            
            // Create simulation
            simulation = d3.forceSimulation(graphData.nodes)
                .force("link", d3.forceLink(graphData.links).id(d => d.id).distance(100))
                .force("charge", d3.forceManyBody().strength(-300))
                .force("center", d3.forceCenter(width / 2, height / 2))
                .on("tick", ticked);
            
            // Add tooltip
            const tooltip = d3.select("#tooltip");
            
            nodes.on("mouseover", function(event, d) {
                tooltip.transition()
                    .duration(200)
                    .style("opacity", .9);
                tooltip.html(`<strong>${d.id}</strong><br/>Type: ${d.type}<br/>Confidence: ${(d.confidence || 0).toFixed(2)}`)
                    .style("left", (event.pageX + 10) + "px")
                    .style("top", (event.pageY - 28) + "px");
            })
            .on("mouseout", function(d) {
                tooltip.transition()
                    .duration(500)
                    .style("opacity", 0);
            });
        }

        function zoomed(event) {
            g.attr("transform", event.transform);
        }

        function resetZoom() {
            svg.transition().duration(750).call(
                zoom.transform,
                d3.zoomIdentity
            );
        }

        function zoomIn() {
            svg.transition().duration(300).call(
                zoom.scaleBy,
                1.5
            );
        }

        function zoomOut() {
            svg.transition().duration(300).call(
                zoom.scaleBy,
                0.75
            );
        }

        function fitToScreen() {
            const width = 800;
            const height = 500;
            const padding = 50;
            
            // Calculate bounds
            const bounds = g.node().getBBox();
            const fullWidth = bounds.width + padding * 2;
            const fullHeight = bounds.height + padding * 2;
            const widthScale = (width - padding * 2) / fullWidth;
            const heightScale = (height - padding * 2) / fullHeight;
            const scale = Math.min(widthScale, heightScale, 1);
            
            // Calculate center
            const centerX = width / 2 - (bounds.x + bounds.width / 2) * scale;
            const centerY = height / 2 - (bounds.y + bounds.height / 2) * scale;
            
            // Apply transform
            svg.transition().duration(750).call(
                zoom.transform,
                d3.zoomIdentity.translate(centerX, centerY).scale(scale)
            );
        }

        function ticked() {
            links
                .attr("x1", d => d.source.x)
                .attr("y1", d => d.source.y)
                .attr("x2", d => d.target.x)
                .attr("y2", d => d.target.y);
            
            nodes
                .attr("cx", d => d.x)
                .attr("cy", d => d.y);
            
            g.selectAll(".node-label")
                .attr("x", d => d.x)
                .attr("y", d => d.y + 5);
        }

        function dragstarted(event, d) {
            if (!event.active) simulation.alphaTarget(0.3).restart();
            d.fx = d.x;
            d.fy = d.y;
        }

        function dragged(event, d) {
            d.fx = event.x;
            d.fy = event.y;
        }

        function dragended(event, d) {
            if (!event.active) simulation.alphaTarget(0);
            d.fx = null;
            d.fy = null;
        }

        // Initialize graph
        createGraph();
    </script>
</body>
</html>