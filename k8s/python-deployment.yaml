apiVersion: apps/v1
kind: Deployment
metadata:
  name: dia3-python-system
  namespace: dia3
  labels:
    app: dia3-python-system
    version: v2.0.0
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dia3-python-system
  template:
    metadata:
      labels:
        app: dia3-python-system
        version: v2.0.0
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
      containers:
      - name: dia3-python-system
        image: dia3-python-system:latest
        imagePullPolicy: Always
        ports:
        - name: mcp
          containerPort: 8000
          protocol: TCP
        - name: api
          containerPort: 8003
          protocol: TCP
        envFrom:
        - configMapRef:
            name: dia3-config
        - secretRef:
            name: dia3-secrets
        env:
        - name: PYTHON_ENV
          value: "production"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
